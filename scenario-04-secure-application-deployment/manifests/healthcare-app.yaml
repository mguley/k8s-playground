apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthcare-app
  namespace: healthcare
spec:
  replicas: 2
  selector:
    matchLabels:
      app: healthcare-app
  template:
    metadata:
      labels:
        app: healthcare-app
    spec:
      initContainers:
        - name: init-nginx
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p /nginx-cache/client_temp /nginx-cache/proxy_temp /nginx-cache/fastcgi_temp /nginx-cache/uwsgi_temp /nginx-cache/scgi_temp
              chmod -R 777 /nginx-cache
              # Add this line to set ownership to nginx user (101)
              chown -R 101:101 /nginx-cache
          securityContext:
            runAsUser: 0  # Run as root to have permission to chown
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "64Mi"
              cpu: "100m"
          volumeMounts:
            - name: nginx-cache
              mountPath: /nginx-cache
      containers:
        - name: healthcare-app
          image: nginx:alpine
          command: ["/bin/sh", "-c"]
          args:
            - |
              # Create a simple web server that simulates a healthcare application
              mkdir -p /usr/share/nginx/html
              
              # Create index.html
              cat > /usr/share/nginx/html/index.html << 'EOL'
              <!DOCTYPE html>
              <html>
              <head>
                <title>Healthcare Application Dashboard</title>
                <style>
                  body {
                    font-family: Arial, sans-serif;
                    margin: 0;
                    padding: 20px;
                    background-color: #f5f7fa;
                  }
                  .dashboard {
                    max-width: 800px;
                    margin: 0 auto;
                    background-color: #fff;
                    padding: 20px;
                    border-radius: 8px;
                    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                  }
                  header {
                    background-color: #3498db;
                    color: white;
                    padding: 20px;
                    border-radius: 8px 8px 0 0;
                    margin: -20px -20px 20px;
                  }
                  h1 {
                    margin: 0;
                  }
                  .secure-badge {
                    background-color: #2ecc71;
                    color: white;
                    padding: 5px 10px;
                    border-radius: 4px;
                    display: inline-block;
                    margin-bottom: 20px;
                  }
                  .section {
                    border: 1px solid #e0e0e0;
                    border-radius: 4px;
                    padding: 15px;
                    margin-bottom: 20px;
                  }
                  .section h2 {
                    margin-top: 0;
                    color: #2c3e50;
                  }
                  .section table {
                    width: 100%;
                    border-collapse: collapse;
                  }
                  .section th, .section td {
                    padding: 8px;
                    text-align: left;
                    border-bottom: 1px solid #e0e0e0;
                  }
                  .section th {
                    background-color: #f8f9fa;
                  }
                  .env-var {
                    font-family: monospace;
                    background-color: #f8f9fa;
                    padding: 10px;
                    border-radius: 4px;
                    margin-top: 5px;
                    white-space: pre-wrap;
                    word-break: break-all;
                  }
                  .masked {
                    color: #e74c3c;
                    font-style: italic;
                  }
                </style>
              </head>
              <body>
                <div class="dashboard">
                  <header>
                    <h1>Healthcare Application Dashboard</h1>
                  </header>
              
                  <div class="secure-badge">Secure Connection</div>
              
                  <div class="section">
                    <h2>Patient Records</h2>
                    <table>
                      <tr>
                        <th>Patient ID</th>
                        <th>Name</th>
                        <th>Last Visit</th>
                      </tr>
                      <tr>
                        <td>P12345</td>
                        <td>John Smith</td>
                        <td>2025-04-15</td>
                      </tr>
                      <tr>
                        <td>P23456</td>
                        <td>Jane Doe</td>
                        <td>2025-04-02</td>
                      </tr>
                      <tr>
                        <td>P34567</td>
                        <td>Robert Johnson</td>
                        <td>2025-04-10</td>
                      </tr>
                    </table>
                  </div>
              
                  <div class="section">
                    <h2>System Information</h2>
                    <p>Pod Name: <span id="pod-name">Loading...</span></p>
                    <p>Namespace: <span id="namespace">Loading...</span></p>
                    <p>Database Connection: <span class="masked">**** (Secured) ****</span></p>
                    <p>API Key Status: <span class="masked">**** (Secured) ****</span></p>
                  </div>
              
                  <div class="section">
                    <h2>Security Settings</h2>
                    <p>TLS Enabled: Yes</p>
                    <p>Data Encryption: Enabled</p>
                    <p>Access Control: Role-Based</p>
                    <p>Network Policy: Restricted</p>
                  </div>
                </div>
              
                <script>
                  // Fill in some dynamic information
                  const hostName = window.location.hostname;
                  document.getElementById('pod-name').textContent = hostName;
                  document.getElementById('namespace').textContent = 'healthcare';
                </script>
              </body>
              </html>
              EOL
              
              # Create a health check endpoint
              mkdir -p /usr/share/nginx/html/health
              echo "OK" > /usr/share/nginx/html/health/index.html
              
              # Start nginx in the foreground
              nginx -g "daemon off;"
          ports:
            - containerPort: 80
          env:
            - name: DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: healthcare-db-credentials
                  key: connection-string
            - name: EXTERNAL_API_KEY
              valueFrom:
                secretKeyRef:
                  name: healthcare-api-keys
                  key: external-api-key
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: healthcare-api-keys
                  key: encryption-key
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE  # Required for binding to ports 80/443
                - SETGID  # Required for changing group ID
                - SETUID  # Required for changing user ID
            readOnlyRootFilesystem: false  # Nginx needs write access to temp directories
        - name: tls-proxy
          image: nginx:alpine
          command: ["/bin/sh", "-c"]
          args:
            - |
              # Create a self-signed certificate for TLS
              apk add --no-cache openssl
              mkdir -p /etc/nginx/ssl
              
              openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
                -keyout /etc/nginx/ssl/tls.key -out /etc/nginx/ssl/tls.crt \
                -subj "/CN=healthcare-app.example.com" \
                -addext "subjectAltName = DNS:healthcare-app.example.com"
              
              # Create NGINX configuration for TLS termination
              cat > /etc/nginx/conf.d/default.conf << 'EOL'
              server {
                  listen 443 ssl;
                  server_name healthcare-app.example.com;
              
                  ssl_certificate /etc/nginx/ssl/tls.crt;
                  ssl_certificate_key /etc/nginx/ssl/tls.key;
              
                  ssl_protocols TLSv1.2 TLSv1.3;
                  ssl_ciphers HIGH:!aNULL:!MD5;
                  ssl_prefer_server_ciphers on;
              
                  location / {
                      proxy_pass http://localhost:80;
                      proxy_set_header Host $host;
                      proxy_set_header X-Real-IP $remote_addr;
                  }
              }
              EOL
              
              # Start nginx
              nginx -g "daemon off;"
          ports:
            - containerPort: 443
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE  # Required for binding to ports 80/443
                - SETGID  # Required for changing group ID
                - SETUID  # Required for changing user ID
      volumes:
        - name: nginx-cache
          emptyDir: {}
